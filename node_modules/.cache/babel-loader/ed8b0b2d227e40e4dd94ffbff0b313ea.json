{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shauryamittal/Desktop/trial-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Papa from \"papaparse\";\nimport dangerous from \"./dangerous.csv\";\nimport half from \"./half.csv\";\n\nfunction App() {\n  _s();\n\n  const [website, setWebsite] = useState('www.google.com');\n  const [websiteSafety, setSafety] = useState(0); // scale from 0-100 or something\n\n  const [resultstyle, setstyle] = useState(\"color: 'red', fontSize: 40, textAlign:'center'\");\n  const [dangerousCSV, setDangerous] = useState(null);\n  const [halfCSV, setHalf] = useState(null);\n  useEffect(() => {\n    /*apa.parse(dangerous, {\n      download: true,\n      complete: function(results){\n        setDangerous(results.data); // dangerousCSV = an array of arrays, dangerousCSV[index][0]\n        console.log(dangerousCSV);\n      }\n    })*/\n    Papa.parse(half, {\n      donwload: true,\n      complete: function (results) {\n        setHalf(results.data);\n        console.log(halfCSV);\n      }\n    });\n  }, []); // [] means that this useEffect will not repeat\n\n  const displayInfo = () => {//console.log(dangerousCSV);\n    //console.log(halfCSV);\n    // check 'website' against all elements in 'dangerousCSV'\n    // map or a loop\n    // based on that result, do 'setSafety' 0-10\n    // based on 'websitesafety', change the styling\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault(); // prevent function misfires\n\n    alert(`Calculating Score for ${website}`);\n    displayInfo(); // calling the function to calculate\n\n    resultStyle = {\n      color: 'blue',\n      fontSize: 40,\n      textAlign: \"center\",\n      visibility: \"visible\"\n    };\n  };\n\n  let resultStyle = {\n    color: 'red',\n    fontSize: 40,\n    textAlign: \"center\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Website security\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Website Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: website,\n            onChange: e => setWebsite(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: resultStyle,\n        children: [website, \"'s safety score: \", websiteSafety]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YlzHRPRkfYiVe3v1Rf2RUvtRkAo=\");\n\n_c = App;\nexport default App; // hw:\n// 1. look up tutorials on reading csv files with javascript + react - probably need useEffect hook\n// 2. look up some stuff with CSS to make the first page look better\n// next week: csv file, react router \n// Later:\n// React Router - have more than one page to your app, tutorials online\n// Turn your excel file into CSV, readd that file into this project\n// Styling, functionality\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shauryamittal/Desktop/trial-app/src/App.js"],"names":["React","useState","useEffect","Papa","dangerous","half","App","website","setWebsite","websiteSafety","setSafety","resultstyle","setstyle","dangerousCSV","setDangerous","halfCSV","setHalf","parse","donwload","complete","results","data","console","log","displayInfo","handleSubmit","evt","preventDefault","alert","resultStyle","color","fontSize","textAlign","visibility","e","target","value"],"mappings":";;;;;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,gBAAD,CAAtC;AACA,QAAM,CAACQ,aAAD,EAAgBC,SAAhB,IAA6BT,QAAQ,CAAC,CAAD,CAA3C,CAFa,CAEmC;;AAChD,QAAM,CAACU,WAAD,EAAcC,QAAd,IAA0BX,QAAQ,CAAC,gDAAD,CAAxC;AACA,QAAM,CAACY,YAAD,EAAeC,YAAf,IAA+Bb,QAAQ,CAAC,IAAD,CAA7C;AACA,QAAM,CAACc,OAAD,EAAUC,OAAV,IAAqBf,QAAQ,CAAC,IAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACA;AACA;AACA;AACA;AACIC,IAAAA,IAAI,CAACc,KAAL,CAAWZ,IAAX,EAAiB;AACfa,MAAAA,QAAQ,EAAE,IADK;AAEfC,MAAAA,QAAQ,EAAE,UAASC,OAAT,EAAiB;AACzBJ,QAAAA,OAAO,CAACI,OAAO,CAACC,IAAT,CAAP;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACD;AALc,KAAjB;AAOD,GAfQ,EAeN,EAfM,CAAT,CAPa,CAsBL;;AAER,QAAMS,WAAW,GAAG,MAAM,CACxB;AACA;AACA;AACE;AACF;AACA;AACD,GAPD;;AASA,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC5BA,IAAAA,GAAG,CAACC,cAAJ,GAD4B,CACN;;AACtBC,IAAAA,KAAK,CAAE,yBAAwBrB,OAAQ,EAAlC,CAAL;AACAiB,IAAAA,WAAW,GAHiB,CAGb;;AACfK,IAAAA,WAAW,GAAG;AACZC,MAAAA,KAAK,EAAE,MADK;AACGC,MAAAA,QAAQ,EAAE,EADb;AACiBC,MAAAA,SAAS,EAAC,QAD3B;AACoCC,MAAAA,UAAU,EAAE;AADhD,KAAd;AAGD,GAPD;;AASA,MAAIJ,WAAW,GAAG;AAChBC,IAAAA,KAAK,EAAE,KADS;AACFC,IAAAA,QAAQ,EAAE,EADR;AACYC,IAAAA,SAAS,EAAC;AADtB,GAAlB;AAGA,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAM,QAAA,QAAQ,EAAEP,YAAhB;AAAA,qCACE;AAAA,mDAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAElB,OAFT;AAGE,YAAA,QAAQ,EAAE2B,CAAC,IAAI1B,UAAU,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV;AAH3B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAeE;AAAG,QAAA,KAAK,EAAEP,WAAV;AAAA,mBAAwBtB,OAAxB,uBAAkDE,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AAsBD;;GAnEQH,G;;KAAAA,G;AAsET,eAAeA,GAAf,C,CACA;AACE;AACA;AAEA;AAGF;AACA;AACA;AACA","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Papa from \"papaparse\";\nimport dangerous from \"./dangerous.csv\"; \nimport half from \"./half.csv\";\n\n\nfunction App() {\n  const [website, setWebsite] = useState('www.google.com');\n  const [websiteSafety, setSafety] = useState(0); // scale from 0-100 or something\n  const [resultstyle, setstyle] = useState(\"color: 'red', fontSize: 40, textAlign:'center'\" );\n  const [dangerousCSV, setDangerous] = useState(null);\n  const [halfCSV, setHalf] = useState(null);\n\n  useEffect(() => {\n    /*apa.parse(dangerous, {\n      download: true,\n      complete: function(results){\n        setDangerous(results.data); // dangerousCSV = an array of arrays, dangerousCSV[index][0]\n        console.log(dangerousCSV);\n      }\n    })*/\n    Papa.parse(half, {\n      donwload: true, \n      complete: function(results){\n        setHalf(results.data); \n        console.log(halfCSV);\n      }\n    })\n  }, []); // [] means that this useEffect will not repeat\n\n  const displayInfo = () => {\n    //console.log(dangerousCSV);\n    //console.log(halfCSV);\n    // check 'website' against all elements in 'dangerousCSV'\n      // map or a loop\n    // based on that result, do 'setSafety' 0-10\n    // based on 'websitesafety', change the styling\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault(); // prevent function misfires\n    alert(`Calculating Score for ${website}`)\n    displayInfo(); // calling the function to calculate\n    resultStyle = {\n      color: 'blue', fontSize: 40, textAlign:\"center\",visibility: \"visible\"\n    }\n  }\n\n  let resultStyle = {\n    color: 'red', fontSize: 40, textAlign:\"center\" \n  }\n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h3>Website security</h3>\n\n        <form onSubmit={handleSubmit}> {/* when you click submit, this will call handleSubmit */}\n          <label>\n            Website Name: \n            <input\n              type=\"text\"\n              value={website}\n              onChange={e => setWebsite(e.target.value)}\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n\n        <p style={resultStyle}>{website}'s safety score: {websiteSafety}</p> {/* style this is css */}\n      </header>\n    </div>\n  );\n}\n\n\nexport default App;\n// hw:\n  // 1. look up tutorials on reading csv files with javascript + react - probably need useEffect hook\n  // 2. look up some stuff with CSS to make the first page look better\n \n  // next week: csv file, react router \n\n\n// Later:\n// React Router - have more than one page to your app, tutorials online\n// Turn your excel file into CSV, readd that file into this project\n// Styling, functionality\n"]},"metadata":{},"sourceType":"module"}